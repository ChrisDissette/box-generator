{"version":3,"sources":["components/Header.jsx","components/Form.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","props","color","onClearHandler","empty","length","Box","display","justifyContent","alignItems","flexDirection","textAlign","mt","maxWidth","mx","Typography","xs","sm","md","lg","variant","fontWeight","Button","type","onClick","Form","input","setInput","onSubmitHandler","setColor","validation","width","height","FormControl","fullWidth","onSubmit","TextField","onChange","event","target","value","label","error","sx","App","useState","setValidation","emptyArr","console","log","preventDefault","flexWrap","map","m","border","bgcolor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.814e1b8b.chunk.js","sourcesContent":["import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    const {color, onClearHandler} = props\r\n\r\n    let empty = true\r\n\r\n    if(color.length > 0){\r\n        empty = false\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' textAlign='center' mt={5} maxWidth='100%' mx={3}>\r\n                <Typography  color={{xs:color, sm:color, md:color, lg:color}} variant='h2' fontWeight='bold'>Box Generator</Typography>\r\n                <Typography variant='h3'>Enter a Color!</Typography>\r\n                {\r\n                    !empty ?\r\n                    <Button type='text' onClick={onClearHandler}>Clear</Button>\r\n                    :''\r\n                }\r\n                \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\n\r\n\r\nconst Form = (props) => {\r\n\r\n    const {input, setInput, color, setColor, onSubmitHandler, validation} = props\r\n\r\n    return (\r\n        <Box width={{xs: 350, sm: 450, md: 500, lg:600}} height={300} display='flex' justifyContent='center' alignItems='center'>\r\n            <FormControl fullWidth>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <TextField\r\n                        fullWidth\r\n                        onChange={(event) => {setInput(event.target.value)}}\r\n                        value={input}\r\n                        label='Enter a Color'\r\n                        error={validation}\r\n                    />\r\n                    <Button type='submit' variant=\"contained\" fullWidth sx={{mt:1}}>Submit</Button>\r\n                </form>\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import {useState} from 'react'\nimport Header from './components/Header'\nimport Form from './components/Form'\nimport Box from '@mui/material/Box';\n\nfunction App() {\n\n  const [input, setInput] = useState('')\n  const [color, setColor] = useState([])\n  const [validation, setValidation] = useState(false)\n\n\n\n  const onSubmitHandler = event =>  {\n    event.preventDefault()\n\n    if (input.length < 1) {\n      setValidation(true)\n      return\n    }\n    setColor([\n      ...color,\n      input\n    ])\n    setInput(\"\")\n    setValidation(false)\n  \n  }\n\n  const onClearHandler = () => {\n    let emptyArr = []\n    console.log(`Empty Array: ${emptyArr}`)\n    setColor(emptyArr)\n  }\n\n  return (\n    <Box>\n      <Header color={color} onClearHandler={onClearHandler} />\n      <Box display='flex' justifyContent='center'>\n          <Form onSubmitHandler={onSubmitHandler} color={color} setColor={setColor} input={input} setInput={setInput} validation={validation} setValidation={setValidation} />\n      </Box>\n      <Box display='flex' maxWidth='100%' flexWrap='wrap' justifyContent={{xs:'center', sm:'center', md:'center', lg:'flex-start'}}>\n        {\n          color.map((color) => (\n            <Box sx={{height:250, width:250, m:2, border: '1px solid black', bgcolor:color}}>\n\n            </Box>\n          ))\n        }\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}